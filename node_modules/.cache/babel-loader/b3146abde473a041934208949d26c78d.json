{"ast":null,"code":"var _jsxFileName = \"D:\\\\Projects\\\\MERN Stack\\\\netflix\\\\netflix\\\\src\\\\Banner.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"./axios\";\nimport requests from \"./requests\";\nimport \"./Banner.css\";\nimport movieTrailer from \"movie-trailer\";\nimport YouTube from \"react-youtube\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Banner() {\n  _s();\n\n  const [movie, setMovie] = useState();\n  const [show, setShow] = useState(false);\n  const [trailerUrl, setTrailerUrl] = useState();\n  useEffect(() => {\n    async function fetchData() {\n      const request = await axios.get(requests.fetchTopRated);\n      console.log(request);\n      setMovie(request.data.results[Math.floor(Math.random() * request.data.results.length - 1)]);\n    }\n\n    fetchData();\n  }, []);\n  console.log(movie);\n\n  function truncate(str, n) {\n    return (str === null || str === void 0 ? void 0 : str.length) > n ? str.substr(0, n - 1) + \" ...\" : str;\n  }\n\n  const handleClick = () => {\n    movieTrailer(null, {\n      tmdbId: movie.id\n    }).then(url => {\n      console.log(\"url is \" + url);\n      const urlParams = new URLSearchParams(new URL(url).search);\n      setTrailerUrl(urlParams.get(\"v\"));\n    }).catch(error => console.log(error));\n  };\n\n  const opts = {\n    height: \"440\",\n    width: \"100%\",\n    playerVars: {\n      autoplay: 1\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\" \", show === false && /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"banner\",\n      style: {\n        backgroundSize: \"cover\",\n        backgroundImage: `url('https://image.tmdb.org/t/p/original/${movie === null || movie === void 0 ? void 0 : movie.backdrop_path}')`,\n        backgroundPosition: \"center center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner__contents\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"banner__title\",\n          children: (movie === null || movie === void 0 ? void 0 : movie.title) || (movie === null || movie === void 0 ? void 0 : movie.name) || (movie === null || movie === void 0 ? void 0 : movie.original_name)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"banner__buttons\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"banner__button\",\n            onClick: () => {\n              setShow(true);\n              handleClick();\n            },\n            children: \"Play\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"banner__button\",\n            children: \"My List\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"banner__description\",\n          children: truncate(movie === null || movie === void 0 ? void 0 : movie.overview, 150)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"banner--fadeButton\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), show === true && /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"banner\",\n      style: {\n        backgroundSize: \"cover\",\n        backgroundPosition: \"center center\"\n      },\n      children: trailerUrl && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(CloseIcon, {\n          style: {\n            marginTop: \"100px\",\n            zIndex: \"1\",\n            float: \"center\",\n            cursor: \"pointer\"\n          },\n          onClick: () => {\n            setTrailerUrl(\"\");\n            setShow(false);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(YouTube, {\n          videoId: trailerUrl,\n          opts: opts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Banner, \"7sq3oaG2tMsuxVFfWelnkliPyaA=\");\n\n_c = Banner;\nexport default Banner;\n\nvar _c;\n\n$RefreshReg$(_c, \"Banner\");","map":{"version":3,"sources":["D:/Projects/MERN Stack/netflix/netflix/src/Banner.js"],"names":["React","useState","useEffect","axios","requests","movieTrailer","YouTube","CloseIcon","Banner","movie","setMovie","show","setShow","trailerUrl","setTrailerUrl","fetchData","request","get","fetchTopRated","console","log","data","results","Math","floor","random","length","truncate","str","n","substr","handleClick","tmdbId","id","then","url","urlParams","URLSearchParams","URL","search","catch","error","opts","height","width","playerVars","autoplay","backgroundSize","backgroundImage","backdrop_path","backgroundPosition","title","name","original_name","overview","marginTop","zIndex","float","cursor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./requests\";\r\nimport \"./Banner.css\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport YouTube from \"react-youtube\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState();\r\n  const [show, setShow] = useState(false);\r\n  const [trailerUrl, setTrailerUrl] = useState();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests.fetchTopRated);\r\n      console.log(request);\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n    }\r\n    fetchData();\r\n  }, []);\r\n  console.log(movie);\r\n\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \" ...\" : str;\r\n  }\r\n\r\n  const handleClick = () => {\r\n    movieTrailer(null, { tmdbId: movie.id })\r\n      .then((url) => {\r\n        console.log(\"url is \" + url);\r\n        const urlParams = new URLSearchParams(new URL(url).search);\r\n        \r\n        setTrailerUrl(urlParams.get(\"v\"));\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  const opts = {\r\n    height: \"440\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      {show === false && (\r\n        <header\r\n          className=\"banner\"\r\n          style={{\r\n            backgroundSize: \"cover\",\r\n            backgroundImage: `url('https://image.tmdb.org/t/p/original/${movie?.backdrop_path}')`,\r\n            backgroundPosition: \"center center\",\r\n          }}\r\n        >\r\n          <div className=\"banner__contents\">\r\n            {/* title */}\r\n            <h1 className=\"banner__title\">\r\n              {movie?.title || movie?.name || movie?.original_name}\r\n            </h1>\r\n            <div className=\"banner__buttons\">\r\n              <button\r\n                className=\"banner__button\"\r\n                onClick={() => {\r\n                  setShow(true);\r\n                  handleClick();\r\n                }}\r\n              >\r\n                Play\r\n              </button>\r\n              <button className=\"banner__button\">My List</button>\r\n            </div>\r\n            <h1 className=\"banner__description\">\r\n              {truncate(movie?.overview, 150)}\r\n            </h1>\r\n          </div>\r\n          {/* shading effect on the banner */}\r\n          <div className=\"banner--fadeButton\" />\r\n        </header>\r\n      )}\r\n      {show === true && (\r\n        <header\r\n          className=\"banner\"\r\n          style={{\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center center\",\r\n          }}\r\n        >\r\n          {trailerUrl && (\r\n            <>\r\n              <CloseIcon\r\n                style={{marginTop:\"100px\",zIndex:\"1\" ,float: \"center\", cursor: \"pointer\" }}\r\n                onClick={() => {\r\n                  setTrailerUrl(\"\");\r\n                  setShow(false);\r\n                }}\r\n              />\r\n              <YouTube videoId={trailerUrl} opts={opts} />\r\n            </>\r\n          )}\r\n        </header>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n"]},"metadata":{},"sourceType":"module"}