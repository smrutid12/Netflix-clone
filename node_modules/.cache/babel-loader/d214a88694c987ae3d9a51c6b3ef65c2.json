{"ast":null,"code":"import _regeneratorRuntime from\"D:/Projects/MERN Stack/netflix/netflix/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"D:/Projects/MERN Stack/netflix/netflix/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"D:/Projects/MERN Stack/netflix/netflix/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from\"react\";import axios from\"./axios\";import\"./Row.css\";import YouTube from\"react-youtube\";import movieTrailer from\"movie-trailer\";import CloseIcon from\"@mui/icons-material/Close\";// import Tooltip from \"@mui/material/Tooltip\";\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var base_url=\"http://image.tmdb.org/t/p/original/\";function Row(_ref){var title=_ref.title,fetchUrl=_ref.fetchUrl,isLargeRow=_ref.isLargeRow;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),movies=_useState2[0],setMovies=_useState2[1];// const [showError, setShowError] = useState();\nvar _useState3=useState(),_useState4=_slicedToArray(_useState3,2),trailerUrl=_useState4[0],setTrailerUrl=_useState4[1];useEffect(function(){function fetchData(){return _fetchData.apply(this,arguments);}function _fetchData(){_fetchData=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var request;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return axios.get(fetchUrl);case 2:request=_context.sent;setMovies(request.data.results);return _context.abrupt(\"return\",request);case 5:case\"end\":return _context.stop();}}},_callee);}));return _fetchData.apply(this,arguments);}console.log(fetchUrl);fetchData();},[fetchUrl]);var opts={height:\"390\",width:\"100%\",playerVars:{autoplay:1}};var handleClick=function handleClick(movie){movieTrailer(null,{tmdbId:movie.id}).then(function(url){console.log(\"url is \"+url);var urlParams=new URLSearchParams(new URL(url).search);console.log(\"urlParamsn\"+urlParams);setTrailerUrl(urlParams.get(\"v\"));}).catch(function(error){return setTrailerUrl(\"Error\");});};return/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"h2\",{children:title}),/*#__PURE__*/_jsxs(\"div\",{className:\"row__posters\",children:[movies.map(function(movie){return/*#__PURE__*/_jsx(\"img\",{onClick:function onClick(){return handleClick(movie);},src:\"\".concat(base_url).concat(isLargeRow?movie.poster_path:movie.backdrop_path),className:\"row__poster \".concat(isLargeRow&&\"row__posterLarge\"),alt:movie.name},movie.id);}),trailerUrl===\"Error\"&&console.log(\"Error\")// <Tooltip title=\"Add\" placement=\"bottom\">\n//   {movies.map((movie) => (\n//     <img\n//       key={movie.id}\n//       onClick={() => handleClick(movie)}\n//       src={`${base_url}${\n//         isLargeRow ? movie.poster_path : movie.backdrop_path\n//       }`}\n//       className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\n//       alt={movie.name}\n//     />\n//   ))}\n// </Tooltip>\n]}),trailerUrl&&/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(CloseIcon,{style:{top:\"0\",float:\"right\",cursor:\"pointer\"},onClick:function onClick(){setTrailerUrl(\"\");}}),/*#__PURE__*/_jsx(YouTube,{videoId:trailerUrl,opts:opts})]})]});}export default Row;","map":{"version":3,"sources":["D:/Projects/MERN Stack/netflix/netflix/src/Row.js"],"names":["React","useState","useEffect","axios","YouTube","movieTrailer","CloseIcon","base_url","Row","title","fetchUrl","isLargeRow","movies","setMovies","trailerUrl","setTrailerUrl","fetchData","get","request","data","results","console","log","opts","height","width","playerVars","autoplay","handleClick","movie","tmdbId","id","then","url","urlParams","URLSearchParams","URL","search","catch","error","map","poster_path","backdrop_path","name","top","float","cursor"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n// import Tooltip from \"@mui/material/Tooltip\";\r\nconst base_url = \"http://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  // const [showError, setShowError] = useState();\r\n  const [trailerUrl, setTrailerUrl] = useState();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    console.log(fetchUrl);\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  const handleClick = (movie) => {\r\n    movieTrailer(null, { tmdbId: movie.id })\r\n      .then((url) => {\r\n        console.log(\"url is \" + url);\r\n        const urlParams = new URLSearchParams(new URL(url).search);\r\n        console.log(\"urlParamsn\" + urlParams);\r\n        setTrailerUrl(urlParams.get(\"v\"));\r\n      })\r\n      .catch((error) => setTrailerUrl(\"Error\"));\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row__posters\">\r\n        {/*Several row_posters  */}\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            src={`${base_url}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n        {trailerUrl === \"Error\" && (\r\n          console.log(\"Error\")\r\n          // <Tooltip title=\"Add\" placement=\"bottom\">\r\n          //   {movies.map((movie) => (\r\n          //     <img\r\n          //       key={movie.id}\r\n          //       onClick={() => handleClick(movie)}\r\n          //       src={`${base_url}${\r\n          //         isLargeRow ? movie.poster_path : movie.backdrop_path\r\n          //       }`}\r\n          //       className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n          //       alt={movie.name}\r\n          //     />\r\n          //   ))}\r\n          // </Tooltip>\r\n        )}\r\n      </div>\r\n      {trailerUrl && (\r\n        <>\r\n          <CloseIcon\r\n            style={{ top: \"0\", float: \"right\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              setTrailerUrl(\"\");\r\n            }}\r\n          />\r\n          <YouTube videoId={trailerUrl} opts={opts} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n"]},"metadata":{},"sourceType":"module"}