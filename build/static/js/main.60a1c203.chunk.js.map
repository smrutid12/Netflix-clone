{"version":3,"sources":["axios.js","Row.js","requests.js","Banner.js","Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["instance","axios","create","baseURL","Row","title","fetchUrl","isLargeRow","useState","movies","setMovies","trailerUrl","setTrailerUrl","useEffect","a","get","request","data","results","console","log","fetchData","className","map","movie","onClick","movieTrailer","tmdbId","id","then","url","urlParams","URLSearchParams","URL","search","catch","error","handleClick","src","poster_path","backdrop_path","alt","name","style","top","float","cursor","YouTube","videoId","opts","height","width","playerVars","autoplay","API_KEY","requests","fetchTrending","fetchNetflixOriginals","fetchTopRated","fetchActionMovies","fetchComedyMovies","fetchHorrorMovies","fetchRomanceMovies","fetchDocumentaries","Banner","str","n","setMovie","show","setShow","Math","floor","random","length","backgroundSize","backgroundImage","backgroundPosition","original_name","overview","substr","position","button","zIndex","left","Navbar","handleShow","window","addEventListener","scrollY","removeEventListener","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.60a1c203.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3',\r\n  });\r\n  \r\nexport default instance;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport \"./Row.css\";\r\nimport YouTube from \"react-youtube\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n// import Tooltip from \"@mui/material/Tooltip\";\r\nconst base_url = \"http://image.tmdb.org/t/p/original/\";\r\n\r\nfunction Row({ title, fetchUrl, isLargeRow }) {\r\n  const [movies, setMovies] = useState([]);\r\n  // const [showError, setShowError] = useState();\r\n  const [trailerUrl, setTrailerUrl] = useState();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(fetchUrl);\r\n      setMovies(request.data.results);\r\n      return request;\r\n    }\r\n    console.log(fetchUrl);\r\n    fetchData();\r\n  }, [fetchUrl]);\r\n\r\n  const opts = {\r\n    height: \"390\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  const handleClick = (movie) => {\r\n    movieTrailer(null, { tmdbId: movie.id })\r\n      .then((url) => {\r\n        console.log(\"url is \" + url);\r\n        const urlParams = new URLSearchParams(new URL(url).search);\r\n        console.log(\"urlParamsn\" + urlParams);\r\n        setTrailerUrl(urlParams.get(\"v\"));\r\n      })\r\n      .catch((error) => setTrailerUrl(\"Error\"));\r\n  };\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <h2>{title}</h2>\r\n      <div className=\"row__posters\">\r\n        {/*Several row_posters  */}\r\n        {movies.map((movie) => (\r\n          <img\r\n            key={movie.id}\r\n            onClick={() => handleClick(movie)}\r\n            src={`${base_url}${\r\n              isLargeRow ? movie.poster_path : movie.backdrop_path\r\n            }`}\r\n            className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n            alt={movie.name}\r\n          />\r\n        ))}\r\n        {trailerUrl === \"Error\" && (\r\n          console.log(\"Error\")\r\n          // <Tooltip title=\"Add\" placement=\"bottom\">\r\n          //   {movies.map((movie) => (\r\n          //     <img\r\n          //       key={movie.id}\r\n          //       onClick={() => handleClick(movie)}\r\n          //       src={`${base_url}${\r\n          //         isLargeRow ? movie.poster_path : movie.backdrop_path\r\n          //       }`}\r\n          //       className={`row__poster ${isLargeRow && \"row__posterLarge\"}`}\r\n          //       alt={movie.name}\r\n          //     />\r\n          //   ))}\r\n          // </Tooltip>\r\n        )}\r\n      </div>\r\n      {trailerUrl && (\r\n        <>\r\n          <CloseIcon\r\n            style={{ top: \"0\", float: \"right\", cursor: \"pointer\" }}\r\n            onClick={() => {\r\n              setTrailerUrl(\"\");\r\n            }}\r\n          />\r\n          <YouTube videoId={trailerUrl} opts={opts} />\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Row;\r\n","const API_KEY = \"39223e2c1a7935f056312dd2bcf45a22\";\r\n\r\nconst requests = {\r\n    fetchTrending: `/trending/all/week?api_key=${API_KEY}&language=en=US`,\r\n    fetchNetflixOriginals: `/discover/tv?api_key=${API_KEY}&with_networks=213`,\r\n    fetchTopRated: `/movie/top_rated?api_key=${API_KEY}&language=en-US`,\r\n    fetchActionMovies: `/discover/movie?api_key=${API_KEY}&with_genres=28`,\r\n    fetchComedyMovies:  `/discover/movie?api_key=${API_KEY}&with_genres=35`,\r\n    fetchHorrorMovies:  `/discover/movie?api_key=${API_KEY}&with_genres=27`,\r\n    fetchRomanceMovies:  `/discover/movie?api_key=${API_KEY}&with_genres=10749`,\r\n    fetchDocumentaries:  `/discover/movie?api_key=${API_KEY}&with_genres=99`,\r\n}\r\nexport default requests;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"./axios\";\r\nimport requests from \"./requests\";\r\nimport \"./Banner.css\";\r\nimport movieTrailer from \"movie-trailer\";\r\nimport YouTube from \"react-youtube\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\n\r\nfunction Banner() {\r\n  const [movie, setMovie] = useState();\r\n  const [show, setShow] = useState(false);\r\n  const [trailerUrl, setTrailerUrl] = useState();\r\n\r\n  useEffect(() => {\r\n    async function fetchData() {\r\n      const request = await axios.get(requests?.fetchTopRated && requests?.fetchDocumentaries &&requests?.fetchRomanceMovies && requests?.fetchComedyMovies &&requests?.fetchActionMovies );\r\n      console.log(request)\r\n      setMovie(\r\n        request.data.results[\r\n          Math.floor(Math.random() * request.data.results.length - 1)\r\n        ]\r\n      );\r\n    }\r\n    fetchData();\r\n  }, []);\r\n\r\n  function truncate(str, n) {\r\n    return str?.length > n ? str.substr(0, n - 1) + \" ...\" : str;\r\n  }\r\n\r\n  const handleClick = () => {\r\n    movieTrailer(null, { tmdbId: movie.id })\r\n      .then((url) => {\r\n        const urlParams = new URLSearchParams(new URL(url).search);\r\n        setTrailerUrl(urlParams.get(\"v\"));\r\n      })\r\n      .catch((error) => console.log(error));\r\n  };\r\n  const opts = {\r\n    height: \"440\",\r\n    width: \"100%\",\r\n    playerVars: {\r\n      autoplay: 1,\r\n    },\r\n  };\r\n  return (\r\n    <>\r\n      {\" \"}\r\n      {show === false && (\r\n        <header\r\n          className=\"banner\"\r\n          style={{\r\n            backgroundSize: \"cover\",\r\n            backgroundImage: `url('https://image.tmdb.org/t/p/original/${movie?.backdrop_path}')`,\r\n            backgroundPosition: \"center center\",\r\n          }}\r\n        >\r\n          <div className=\"banner__contents\">\r\n            {/* title */}\r\n            <h1 className=\"banner__title\">\r\n              {movie?.title || movie?.name || movie?.original_name}\r\n            </h1>\r\n            <div className=\"banner__buttons\">\r\n              <button\r\n                className=\"banner__button\"\r\n                onClick={() => {\r\n                  setShow(true);\r\n                  handleClick();\r\n                }}\r\n              >\r\n                Play\r\n              </button>\r\n              <button className=\"banner__button\">My List</button>\r\n            </div>\r\n            <h1 className=\"banner__description\">\r\n              {truncate(movie?.overview, 150)}\r\n            </h1>\r\n          </div>\r\n          {/* shading effect on the banner */}\r\n          <div className=\"banner--fadeButton\" />\r\n        </header>\r\n      )}\r\n      {show === true && (\r\n        <header\r\n          className=\"banner\"\r\n          style={{\r\n            backgroundSize: \"cover\",\r\n            backgroundPosition: \"center center\",\r\n          }}\r\n        >\r\n          {trailerUrl && (\r\n            <>\r\n              <CloseIcon\r\n                style={{\r\n                  position: \"fixed\",\r\n                  button: \"50%\",\r\n                  zIndex:\"1\",\r\n                  left: \"50%\",\r\n                  cursor: \"pointer\",\r\n                }}\r\n                onClick={() => {\r\n                  setTrailerUrl(\"\");\r\n                  setShow(false);\r\n                }}\r\n              />\r\n              <YouTube videoId={trailerUrl} opts={opts} />\r\n            </>\r\n          )}\r\n        </header>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Banner;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Navbar.css\";\r\n// import SearchIcon from \"@mui/icons-material/Search\";\r\nfunction Navbar() {\r\n  const [show, handleShow] = useState(false);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener(\"scroll\", () => {\r\n      if (window.scrollY > 100) {\r\n        handleShow(true);\r\n      } else handleShow(false);\r\n    });\r\n    return () => {\r\n      window.removeEventListener(\"scroll\");\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`nav ${show && \"nav__black\"}`}>\r\n      <img\r\n        className=\"nav__logo\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/08/Netflix_2015_logo.svg\"\r\n        alt=\"Netflix Logo\"\r\n      />\r\n\r\n      <img\r\n        className=\"nav__avatar\"\r\n        src=\"https://upload.wikimedia.org/wikipedia/commons/0/0b/Netflix-avatar.png\"\r\n        alt=\"Netflix Logo\"\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport Row from \"./Row\";\nimport requests from \"./requests\";\nimport Banner from \"./Banner\";\nimport Navbar from \"./Navbar\";\nfunction App() {\n  return (\n    <div className=\"app\">\n      {/* NAV BAR */}\n      <Navbar />\n      {/* Banner */}\n      <Banner/>\n      <Row\n        title=\"NETFLIX ORIGINALs\"\n        fetchUrl={requests.fetchNetflixOriginals}\n        isLargeRow\n      />\n      <Row title=\"Trending Now\" fetchUrl={requests.fetchTrending} isLargeRow />\n      <Row title=\"Top Rated\" fetchUrl={requests.fetchTopRated} isLargeRow/>\n      <Row title=\"Action Movies\" fetchUrl={requests.fetchActionMovies} isLargeRow />\n      <Row title=\"Comedy Movies\" fetchUrl={requests.fetchComedyMovies} isLargeRow />\n      <Row title=\"Horror Movies\" fetchUrl={requests.fetchHorrorMovies} isLargeRow/>\n      <Row title=\"Romance Movies\" fetchUrl={requests.fetchRomanceMovies} isLargeRow/>\n      <Row title=\"Documentaries\" fetchUrl={requests.fetchDocumentaries} isLargeRow />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}